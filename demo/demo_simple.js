(()=>{"use strict";var __webpack_modules__={650:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n;// CONCATENATED MODULE: ./esm/DragEvent.js\nclass DragEvent {\n  constructor(type) {\n    this.type = type;\n  }\n\n}\nvar DragEventType;\n\n(function (DragEventType) {\n  DragEventType["DRAG_START"] = "THREE_CANVAS_EVENT_DRAG_START";\n  DragEventType["DRAG"] = "THREE_CANVAS_EVENT_DRAG";\n  DragEventType["DRAG_END"] = "THREE_CANVAS_EVENT_DRAG_END";\n  DragEventType["MOVE"] = "THREE_CANVAS_EVENT_MOVE";\n  DragEventType["ZOOM"] = "THREE_CANVAS_EVENT_ZOOM";\n})(DragEventType || (DragEventType = {}));\n// EXTERNAL MODULE: ./node_modules/@masatomakino/raf-ticker/esm/index.js + 2 modules\nvar esm = __webpack_require__(163);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(75);\n;// CONCATENATED MODULE: ./esm/DragWatcher.js\n\n\n\n/**\n * 1.カンバス全体がドラッグされている状態を確認する\n * 2.マウスホイールが操作されている状態を確認する\n * この二つを実行するためのクラスです。\n */\n\nclass DragWatcher extends three_module/* EventDispatcher */.pBf {\n  constructor(canvas, option) {\n    var _a, _b;\n\n    super();\n    this.isDrag = false;\n    this.hasThrottled = false;\n    this.throttlingTime_ms = 16;\n    this.throttlingDelta = 0;\n\n    this.onTick = e => {\n      this.throttlingDelta += e.delta;\n      if (this.throttlingDelta < this.throttlingTime_ms) return;\n      this.hasThrottled = false;\n      this.throttlingDelta %= this.throttlingTime_ms;\n    };\n\n    this.onDocumentMouseDown = event => {\n      if (this.isDrag) return;\n      if (!this.isContain(event)) return;\n      this.isDrag = true;\n      this.updatePosition(event);\n      this.dispatchDragEvent(DragEventType.DRAG_START, event);\n    };\n\n    this.onDocumentMouseMove = event => {\n      if (this.hasThrottled) return;\n      this.hasThrottled = true;\n      this.dispatchDragEvent(DragEventType.MOVE, event);\n      if (!this.isDrag) return;\n      this.dispatchDragEvent(DragEventType.DRAG, event);\n      this.updatePosition(event);\n    };\n\n    this.onDocumentMouseLeave = event => {\n      this.onDocumentMouseUp(event);\n    };\n\n    this.onDocumentMouseUp = event => {\n      if (!this.isDrag) return;\n      this.isDrag = false;\n      this.dispatchDragEvent(DragEventType.DRAG_END, event);\n    };\n\n    this.onMouseWheel = e => {\n      const evt = new DragEvent(DragEventType.ZOOM);\n\n      if (e.detail != null) {\n        evt.deltaScroll = e.detail < 0 ? 1 : -1;\n      }\n\n      if (e.wheelDelta != null) {\n        evt.deltaScroll = e.wheelDelta > 0 ? 1 : -1;\n      }\n\n      if (e.deltaY != null) {\n        evt.deltaScroll = e.deltaY > 0 ? 1 : -1;\n      }\n\n      this.dispatchEvent(evt);\n    };\n\n    (_a = this.throttlingTime_ms) !== null && _a !== void 0 ? _a : this.throttlingTime_ms = option === null || option === void 0 ? void 0 : option.throttlingTime_ms;\n    (_b = this.viewport) !== null && _b !== void 0 ? _b : this.viewport = option === null || option === void 0 ? void 0 : option.viewport;\n    this.canvas = canvas;\n    this.canvas.addEventListener("mousemove", this.onDocumentMouseMove, false);\n    this.canvas.addEventListener("mousedown", this.onDocumentMouseDown, false);\n    this.canvas.addEventListener("mouseup", this.onDocumentMouseUp, false);\n    this.canvas.addEventListener("mouseleave", this.onDocumentMouseLeave, false);\n    this.canvas.addEventListener("wheel", this.onMouseWheel, false);\n    esm/* RAFTicker.on */.Fz.on(esm/* RAFTickerEventType.tick */.M9.tick, this.onTick);\n  }\n\n  updatePosition(event) {\n    this.positionX = event.offsetX;\n    this.positionY = event.offsetY;\n  }\n\n  dispatchDragEvent(type, event) {\n    const evt = new DragEvent(type);\n    const {\n      x,\n      y\n    } = this.convertToLocalMousePoint(event);\n    evt.positionX = x;\n    evt.positionY = y;\n\n    if (type === DragEventType.DRAG) {\n      evt.deltaX = event.offsetX - this.positionX;\n      evt.deltaY = event.offsetY - this.positionY;\n    }\n\n    this.dispatchEvent(evt);\n  }\n\n  convertToLocalMousePoint(e) {\n    if (!this.viewport) {\n      return {\n        x: e.offsetX,\n        y: e.offsetY\n      };\n    } else {\n      const rect = DragWatcher.convertToRect(this.canvas, this.viewport);\n      return {\n        x: e.offsetX - rect.x1,\n        y: e.offsetY - rect.y1\n      };\n    }\n  }\n  /**\n   * マウスポインタがviewport内に収まっているか否か\n   * @param event\n   * @private\n   */\n\n\n  isContain(event) {\n    if (!this.viewport) return true;\n    const rect = DragWatcher.convertToRect(this.canvas, this.viewport);\n    return event.offsetX >= rect.x1 && event.offsetX <= rect.x2 && event.offsetY >= rect.y1 && event.offsetY <= rect.y2;\n  }\n\n  static convertToRect(canvas, viewport) {\n    let height = 0;\n\n    if (canvas.style.width != null && canvas.style.height) {\n      height = parseInt(canvas.style.height);\n    } else {\n      height = canvas.height / window.devicePixelRatio;\n    }\n\n    return {\n      x1: viewport.x,\n      x2: viewport.x + viewport.width,\n      y1: height - (viewport.y + viewport.height),\n      y2: height - viewport.y\n    };\n  }\n\n  dispose() {\n    this.canvas.removeEventListener("mousemove", this.onDocumentMouseMove, false);\n    this.canvas.removeEventListener("mousedown", this.onDocumentMouseDown, false);\n    this.canvas.removeEventListener("mouseup", this.onDocumentMouseUp, false);\n    this.canvas.removeEventListener("mouseleave", this.onDocumentMouseLeave, false);\n    esm/* RAFTicker.off */.Fz.off(esm/* RAFTickerEventType.tick */.M9.tick, this.onTick);\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/SleepEvent.js\nvar SleepEventType;\n\n(function (SleepEventType) {\n  SleepEventType["SLEEP"] = "SLEEP_EVENT_TYPE_SLEEP";\n  SleepEventType["WAKEUP"] = "SLEEP_EVENT_TYPE_WAKEUP";\n})(SleepEventType || (SleepEventType = {}));\n\nclass SleepEvent {\n  constructor(type) {\n    this.type = type;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/SleepWatcher.js\n\n\nclass SleepWatcher extends three_module/* EventDispatcher */.pBf {\n  constructor(dragWatcher, option) {\n    super();\n    this.dragWatcher = dragWatcher;\n    this.timeOut_ms = 10 * 1000; //ミリsec\n\n    this.isSleep = false;\n    /**\n     * 無操作タイマーをリセットし、再度カウントを開始する。\n     * zoomイベントハンドラー\n     */\n\n    this.resetTimer = () => {\n      this.reset();\n    };\n\n    this.sleep = () => {\n      if (this.isSleep) return;\n      this.dispatchEvent(new SleepEvent(SleepEventType.SLEEP));\n      this.isSleep = true;\n    };\n\n    this.wakeup = () => {\n      if (!this.isSleep) return;\n      this.dispatchEvent(new SleepEvent(SleepEventType.WAKEUP));\n      this.isSleep = false;\n    };\n\n    this.pauseTimer = () => {\n      this.stopTimer();\n      this.wakeup();\n      const watcher = this.dragWatcher;\n      watcher.removeEventListener(DragEventType.DRAG_START, this.pauseTimer);\n      watcher.addEventListener(DragEventType.DRAG_END, this.resumeTimer);\n    };\n\n    this.resumeTimer = () => {\n      this.resetTimer();\n      const watcher = this.dragWatcher;\n      watcher.addEventListener(DragEventType.DRAG_START, this.pauseTimer);\n      watcher.removeEventListener(DragEventType.DRAG_END, this.resumeTimer);\n    };\n\n    if (!option) option = {};\n    if (option.timeOut_ms != null) this.timeOut_ms = option.timeOut_ms;\n  }\n  /**\n   * 無操作タイマーをリセットし、再度カウントを開始する。\n   */\n\n\n  reset() {\n    this.stopTimer();\n    this.wakeup();\n    this.sleepTimerID = setTimeout(this.sleep, this.timeOut_ms);\n  }\n\n  stopTimer() {\n    if (this.sleepTimerID == null) return;\n    clearTimeout(this.sleepTimerID);\n    this.sleepTimerID = null;\n  }\n  /**\n   * マウス監視を開始する\n   */\n\n\n  start() {\n    this.stopMouseEventListeners();\n    this.startMouseEventListeners();\n    this.resetTimer();\n  }\n\n  startMouseEventListeners() {\n    const watcher = this.dragWatcher;\n    watcher.addEventListener(DragEventType.ZOOM, this.resetTimer);\n    watcher.addEventListener(DragEventType.DRAG_START, this.pauseTimer);\n  }\n  /**\n   * マウスの監視を停止する\n   */\n\n\n  stop() {\n    this.stopTimer();\n    this.wakeup();\n    this.stopMouseEventListeners();\n  }\n\n  stopMouseEventListeners() {\n    const watcher = this.dragWatcher;\n    watcher.removeEventListener(DragEventType.ZOOM, this.resetTimer);\n    watcher.removeEventListener(DragEventType.DRAG_START, this.pauseTimer);\n    watcher.removeEventListener(DragEventType.DRAG_END, this.resumeTimer);\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./demoSrc/demo_simple.js\n\n\nconst W = 1280;\nconst H = 640;\n\nconst onDomContentsLoaded = () => {\n  // シーンを作成\n  const scene = new three_module/* Scene */.xsS();\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 10000);\n  camera.position.set(0, 0, 1000);\n  scene.add(camera);\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas")\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio); //平行光源オブジェクト(light)の設定\n\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  renderer.render(scene, camera); //ドラッグ監視処理を開始\n\n  const watcher = new DragWatcher(renderer.domElement);\n  watcher.addEventListener(DragEventType.DRAG, e => {\n    console.log(`throttlingTime_ms : ${watcher.throttlingTime_ms}`, `TimeStamp : ${performance.now()}`, e);\n  });\n  watcher.addEventListener(DragEventType.DRAG_START, e => {\n    console.log(e);\n  });\n  watcher.addEventListener(DragEventType.DRAG_END, e => {\n    console.log(e);\n  });\n  watcher.addEventListener(DragEventType.ZOOM, e => {\n    console.log(e);\n  });\n  const sleepWatcher = new SleepWatcher(watcher, {\n    timeOut_ms: 2 * 1000\n  });\n  sleepWatcher.addEventListener(SleepEventType.SLEEP, e => {\n    console.log(e);\n  });\n  sleepWatcher.addEventListener(SleepEventType.WAKEUP, e => {\n    console.log(e);\n  });\n  sleepWatcher.start();\n};\n/**\n * DOMContentLoaded以降に初期化処理を実行する\n */\n\n\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///650\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](U,U.exports,__webpack_require__),U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,B)=>{if(!F){var I=1/0;for(s=0;s<deferred.length;s++){for(var[F,U,B]=deferred[s],C=!0,e=0;e<F.length;e++)(!1&B||I>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[e])))?F.splice(e--,1):(C=!1,B<I&&(I=B));if(C){deferred.splice(s--,1);var g=U();void 0!==g&&(Q=g)}}return Q}B=B||0;for(var s=deferred.length;s>0&&deferred[s-1][2]>B;s--)deferred[s]=deferred[s-1];deferred[s]=[F,U,B]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.j=451,(()=>{var Q={451:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var B,I,[C,e,g]=U,s=0;if(C.some((F=>0!==Q[F]))){for(B in e)__webpack_require__.o(e,B)&&(__webpack_require__.m[B]=e[B]);if(g)var t=g(__webpack_require__)}for(F&&F(U);s<C.length;s++)I=C[s],__webpack_require__.o(Q,I)&&Q[I]&&Q[I][0](),Q[I]=0;return __webpack_require__.O(t)},U=self.webpackChunk_masatomakino_threejs_drag_watcher=self.webpackChunk_masatomakino_threejs_drag_watcher||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(650)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();